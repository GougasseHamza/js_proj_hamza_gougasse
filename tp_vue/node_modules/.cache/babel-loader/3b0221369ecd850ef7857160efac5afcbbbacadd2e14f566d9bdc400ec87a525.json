{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref } from 'vue';\nimport products from '@/assets/products.json';\nexport default {\n  __name: 'ProductFilters',\n  emits: ['change-category', 'filter-name'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const categories = ref([]);\n    const category = ref(\"\");\n    const productName = ref(\"\");\n    const emit = __emit;\n    function emitCategory() {\n      emit('change-category', category.value); // Emit the selected category\n    }\n    function fetchCategories() {\n      const s = new Set();\n      for (const item of products) {\n        s.add(item.categorie); // Assuming the field name is \"categorie\"\n      }\n      categories.value = Array.from(s);\n    }\n    fetchCategories();\n    const __returned__ = {\n      categories,\n      category,\n      productName,\n      emit,\n      emitCategory,\n      fetchCategories,\n      ref,\n      get products() {\n        return products;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","products","categories","category","productName","emit","__emit","emitCategory","value","fetchCategories","s","Set","item","add","categorie","Array","from"],"sources":["/home/kyyblin/js_proj_hamza_gougasse/tp_vue/src/components/ProductFilters.vue"],"sourcesContent":["<template>\n  <div class=\"product-filters\">\n    <input type=\"text\" v-model=\"productName\" placeholder=\"Search for a product\" @ />\n    <select v-model=\"category\" @change=\"emitCategory\">\n      <option v-for=\"(cat, index) in categories\" :key=\"index\" :value=\"cat\">{{ cat }}</option>\n    </select>\n  </div>\n</template>\n\n<script setup>\nimport { ref, defineEmits } from 'vue'\nimport products from '@/assets/products.json'\n\nconst categories = ref([])\nconst category = ref(\"\")\nconst productName = ref(\"\")\nconst emit = defineEmits(['change-category', 'filter-name'])\n\nfunction emitCategory() {\n  emit('change-category', category.value)  // Emit the selected category\n}\n\nfunction fetchCategories() {\n  const s = new Set()\n  for (const item of products) {\n    s.add(item.categorie)  // Assuming the field name is \"categorie\"\n  }\n  categories.value = Array.from(s)\n}\n\nfetchCategories()\n</script>\n"],"mappings":";;;;;;;AAUA,SAASA,GAAgB,QAAQ,KAAI;AACrC,OAAOC,QAAQ,MAAM,wBAAuB;;;;;;;;;IAE5C,MAAMC,UAAU,GAAGF,GAAG,CAAC,EAAE;IACzB,MAAMG,QAAQ,GAAGH,GAAG,CAAC,EAAE;IACvB,MAAMI,WAAW,GAAGJ,GAAG,CAAC,EAAE;IAC1B,MAAMK,IAAI,GAAGC,MAAA;IAEb,SAASC,YAAYA,CAAA,EAAG;MACtBF,IAAI,CAAC,iBAAiB,EAAEF,QAAQ,CAACK,KAAK,CAAC,EAAE;IAC3C;IAEA,SAASC,eAAeA,CAAA,EAAG;MACzB,MAAMC,CAAC,GAAG,IAAIC,GAAG,CAAC;MAClB,KAAK,MAAMC,IAAI,IAAIX,QAAQ,EAAE;QAC3BS,CAAC,CAACG,GAAG,CAACD,IAAI,CAACE,SAAS,CAAC,EAAE;MACzB;MACAZ,UAAU,CAACM,KAAK,GAAGO,KAAK,CAACC,IAAI,CAACN,CAAC;IACjC;IAEAD,eAAe,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}