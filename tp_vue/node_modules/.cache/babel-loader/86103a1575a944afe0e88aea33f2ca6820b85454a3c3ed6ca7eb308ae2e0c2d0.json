{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"todo-list\"\n};\nconst _hoisted_2 = [\"onUpdate:modelValue\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \" my list\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.addTodo, [\"prevent\"])\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newTodo = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newTodo]]), _cache[1] || (_cache[1] = _createElementVNode(\"input\", {\n    type: \"submit\"\n  }, null, -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.todos, todo => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: todo.id\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => todo.checked = $event\n    }, null, 8 /* PROPS */, _hoisted_2), [[_vModelCheckbox, todo.checked]]), _createElementVNode(\"span\", {\n      class: _normalizeClass({\n        c: _ctx.c\n      })\n    }, null, 2 /* CLASS */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_withModifiers","$setup","addTodo","type","_cache","$event","newTodo","_Fragment","_renderList","todos","todo","key","id","checked","_hoisted_2","_normalizeClass","c","_ctx"],"sources":["/home/kyyblin/js_proj_hamza_gougasse/tp_vue/src/components/TodoList.vue"],"sourcesContent":["<template>\n    <div class=\"todo-list\">\n        <h2> my list</h2>\n        <form @submit.prevent=\"addTodo\">\n            <input type=\"text\" v-model=\"newTodo\" >\n            <input type=\"submit\">\n        </form>\n        <ul >\n            <li v-for=\"todo in todos\" :key=\"todo.id\">\n                <input type=\"checkbox\" v-model=\"todo.checked\">\n                <span :class=\"{c}\"></span>\n            </li>\n        </ul>\n    </div>\n  </template>\n  \n  <script setup>\n  import { ref } from 'vue'\n  \n  // Reactive state\n  const todos = ref([\n    { id: 1, text: 'Learn Vue', completed: false },\n    { id: 2, text: 'Build a todo app', completed: false }\n  ])\n  const newTodo = ref('')\n  \n  // Methods\n  function addTodo() {\n    if (newTodo.value.trim()) {\n      todos.value.push({\n        id: Date.now(),\n        text: newTodo.value,\n        completed: false\n      })\n      newTodo.value = ''\n    }\n  }\n  \n  function removeTodo(id) {\n    todos.value = todos.value.filter(todo => todo.id !== id)\n  }\n  </script>\n  \n  <style scoped>\n  .completed {\n    text-decoration: line-through;\n    color: #888;\n  }\n  </style>"],"mappings":";;EACSA,KAAK,EAAC;AAAW;mBAD1B;;uBACIC,mBAAA,CAYM,OAZNC,UAYM,G,0BAXFC,mBAAA,CAAiB,YAAb,UAAQ,sBACZA,mBAAA,CAGO;IAHAC,QAAM,EAHrBC,cAAA,CAG+BC,MAAA,CAAAC,OAAO;sBAC1BJ,mBAAA,CAAsC;IAA/BK,IAAI,EAAC,MAAM;IAJ9B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIwCJ,MAAA,CAAAK,OAAO,GAAAD,MAAA;iDAAPJ,MAAA,CAAAK,OAAO,E,6BACnCR,mBAAA,CAAqB;IAAdK,IAAI,EAAC;EAAQ,4B,4BAExBL,mBAAA,CAKK,c,kBAJDF,mBAAA,CAGKW,SAAA,QAXjBC,WAAA,CAQ+BP,MAAA,CAAAQ,KAAK,EAAbC,IAAI;yBAAfd,mBAAA,CAGK;MAHsBe,GAAG,EAAED,IAAI,CAACE;wBACjCd,mBAAA,CAA8C;MAAvCK,IAAI,EAAC,UAAU;MATtC,uBAAAE,MAAA,IASgDK,IAAI,CAACG,OAAO,GAAAR;4BAT5DS,UAAA,I,kBASgDJ,IAAI,CAACG,OAAO,E,GAC5Cf,mBAAA,CAA0B;MAAnBH,KAAK,EAV5BoB,eAAA;QAAAC,CAAA,EAU+BC,IAAA,CAAAD;MAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}