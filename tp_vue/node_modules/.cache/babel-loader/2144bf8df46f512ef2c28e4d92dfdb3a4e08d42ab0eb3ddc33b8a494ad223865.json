{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"todo-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _cache[0] || (_cache[0] = [_createElementVNode(\"h2\", null, \" my list\", -1 /* HOISTED */), _createElementVNode(\"ul\", {\n    v: \"\"\n  }, null, -1 /* HOISTED */)]));\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_cache","_createElementVNode","v"],"sources":["/home/kyyblin/js_proj_hamza_gougasse/tp_vue/src/components/TodoList.vue"],"sourcesContent":["<template>\n    <div class=\"todo-list\">\n        <h2> my list</h2>\n        <ul v></ul>\n    </div>\n  </template>\n  \n  <script setup>\n  import { ref } from 'vue'\n  \n  // Reactive state\n  const todos = ref([\n    { id: 1, text: 'Learn Vue', completed: false },\n    { id: 2, text: 'Build a todo app', completed: false }\n  ])\n  const newTodo = ref('')\n  \n  // Methods\n  function addTodo() {\n    if (newTodo.value.trim()) {\n      todos.value.push({\n        id: Date.now(),\n        text: newTodo.value,\n        completed: false\n      })\n      newTodo.value = ''\n    }\n  }\n  \n  function removeTodo(id) {\n    todos.value = todos.value.filter(todo => todo.id !== id)\n  }\n  </script>\n  \n  <style scoped>\n  .completed {\n    text-decoration: line-through;\n    color: #888;\n  }\n  </style>"],"mappings":";;EACSA,KAAK,EAAC;AAAW;;uBAAtBC,mBAAA,CAGM,OAHNC,UAGM,EAAAC,MAAA,QAAAA,MAAA,OAFFC,mBAAA,CAAiB,YAAb,UAAQ,qBACZA,mBAAA,CAAW;IAAPC,CAAC,EAAD;EAAC,2B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}