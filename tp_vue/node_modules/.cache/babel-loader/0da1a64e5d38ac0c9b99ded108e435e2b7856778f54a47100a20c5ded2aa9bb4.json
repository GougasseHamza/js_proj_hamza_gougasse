{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveDirective as _resolveDirective } from \"vue\";\nconst _hoisted_1 = {\n  class: \"todo-list\"\n};\nconst _hoisted_2 = {\n  type: \"checkbox\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _directive_mode = _resolveDirective(\"mode\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \" my list\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.addTodo, [\"prevent\"])\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newTodo = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newTodo]]), _cache[1] || (_cache[1] = _createElementVNode(\"input\", {\n    type: \"submit\"\n  }, null, -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.todos, newtodo => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: newtodo.id\n    }, [_withDirectives(_createElementVNode(\"input\", _hoisted_2, null, 512 /* NEED_PATCH */), [[_directive_mode]])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","type","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_withModifiers","$setup","addTodo","_cache","$event","newTodo","_Fragment","_renderList","todos","newtodo","key","id","_hoisted_2"],"sources":["/home/kyyblin/js_proj_hamza_gougasse/tp_vue/src/components/TodoList.vue"],"sourcesContent":["<template>\n    <div class=\"todo-list\">\n        <h2> my list</h2>\n        <form @submit.prevent=\"addTodo\">\n            <input type=\"text\" v-model=\"newTodo\" >\n            <input type=\"submit\">\n        </form>\n        <ul >\n            <li v-for=\"newtodo in todos\" :key=\"newtodo.id\">\n                <input type=\"checkbox\" v-mode>\n            </li>\n        </ul>\n    </div>\n  </template>\n  \n  <script setup>\n  import { ref } from 'vue'\n  \n  // Reactive state\n  const todos = ref([\n    { id: 1, text: 'Learn Vue', completed: false },\n    { id: 2, text: 'Build a todo app', completed: false }\n  ])\n  const newTodo = ref('')\n  \n  // Methods\n  function addTodo() {\n    if (newTodo.value.trim()) {\n      todos.value.push({\n        id: Date.now(),\n        text: newTodo.value,\n        completed: false\n      })\n      newTodo.value = ''\n    }\n  }\n  \n  function removeTodo(id) {\n    todos.value = todos.value.filter(todo => todo.id !== id)\n  }\n  </script>\n  \n  <style scoped>\n  .completed {\n    text-decoration: line-through;\n    color: #888;\n  }\n  </style>"],"mappings":";;EACSA,KAAK,EAAC;AAAW;;EAQHC,IAAI,EAAC;AAAU;;;uBARlCC,mBAAA,CAWM,OAXNC,UAWM,G,0BAVFC,mBAAA,CAAiB,YAAb,UAAQ,sBACZA,mBAAA,CAGO;IAHAC,QAAM,EAHrBC,cAAA,CAG+BC,MAAA,CAAAC,OAAO;sBAC1BJ,mBAAA,CAAsC;IAA/BH,IAAI,EAAC,MAAM;IAJ9B,uBAAAQ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIwCH,MAAA,CAAAI,OAAO,GAAAD,MAAA;iDAAPH,MAAA,CAAAI,OAAO,E,6BACnCP,mBAAA,CAAqB;IAAdH,IAAI,EAAC;EAAQ,4B,4BAExBG,mBAAA,CAIK,c,kBAHDF,mBAAA,CAEKU,SAAA,QAVjBC,WAAA,CAQkCN,MAAA,CAAAO,KAAK,EAAhBC,OAAO;yBAAlBb,mBAAA,CAEK;MAFyBc,GAAG,EAAED,OAAO,CAACE;wBACvCb,mBAAA,CAA8B,SAA9Bc,UAA8B,gC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}