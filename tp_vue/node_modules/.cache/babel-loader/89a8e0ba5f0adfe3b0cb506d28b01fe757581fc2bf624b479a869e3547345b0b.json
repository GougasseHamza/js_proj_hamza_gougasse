{"ast":null,"code":"import { createElementVNode as _createElementVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"todo-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \" my list\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.addTodo, [\"prevent\"])\n  }, \" inp \", 32 /* NEED_HYDRATION */), _cache[1] || (_cache[1] = _createElementVNode(\"ul\", null, null, -1 /* HOISTED */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_withModifiers","$setup","addTodo"],"sources":["/home/kyyblin/js_proj_hamza_gougasse/tp_vue/src/components/TodoList.vue"],"sourcesContent":["<template>\n    <div class=\"todo-list\">\n        <h2> my list</h2>\n        <form @submit.prevent=\"addTodo\">\n            inp\n        </form>\n        <ul >\n\n        </ul>\n    </div>\n  </template>\n  \n  <script setup>\n  import { ref } from 'vue'\n  \n  // Reactive state\n  const todos = ref([\n    { id: 1, text: 'Learn Vue', completed: false },\n    { id: 2, text: 'Build a todo app', completed: false }\n  ])\n  const newTodo = ref('')\n  \n  // Methods\n  function addTodo() {\n    if (newTodo.value.trim()) {\n      todos.value.push({\n        id: Date.now(),\n        text: newTodo.value,\n        completed: false\n      })\n      newTodo.value = ''\n    }\n  }\n  \n  function removeTodo(id) {\n    todos.value = todos.value.filter(todo => todo.id !== id)\n  }\n  </script>\n  \n  <style scoped>\n  .completed {\n    text-decoration: line-through;\n    color: #888;\n  }\n  </style>"],"mappings":";;EACSA,KAAK,EAAC;AAAW;;uBAAtBC,mBAAA,CAQM,OARNC,UAQM,G,0BAPFC,mBAAA,CAAiB,YAAb,UAAQ,sBACZA,mBAAA,CAEO;IAFAC,QAAM,EAHrBC,cAAA,CAG+BC,MAAA,CAAAC,OAAO;KAAE,OAEhC,4B,0BACAJ,mBAAA,CAEK,qC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}