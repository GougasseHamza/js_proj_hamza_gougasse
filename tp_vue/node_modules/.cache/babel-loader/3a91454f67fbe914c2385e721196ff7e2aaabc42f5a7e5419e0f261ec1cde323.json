{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref } from 'vue';\nimport products from '@/assets/products.json';\nexport default {\n  __name: 'ProductFilters',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const categories = ref([]);\n    const category = ref(\"\");\n    const productName = ref(\"\");\n    function fetchCategories() {\n      const s = new Set();\n      for (const item of products) {\n        s.add(item.categorie); // Fixed the field name\n      }\n      categories.value = Array.from(s); // Directly assign the array to the ref\n    }\n    fetchCategories();\n    const __returned__ = {\n      categories,\n      category,\n      productName,\n      fetchCategories,\n      ref,\n      get products() {\n        return products;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","products","categories","category","productName","fetchCategories","s","Set","item","add","categorie","value","Array","from"],"sources":["/home/kyyblin/js_proj_hamza_gougasse/tp_vue/src/components/ProductFilters.vue"],"sourcesContent":["<template>\n  <div class=\"product-filters\">\n    <input type=\"text\" v-model=\"productName\" placeholder=\"Search for a product\" />\n    <select v-model=\"category\">\n      <option v-for=\"(cat, index) in categories\" :key=\"index\" :value=\"cat\">{{ cat }}</option>\n    </select>\n  </div>\n</template>\n<script setup>\nimport { ref,defineProps, defineEmits } from 'vue'\nimport products from '@/assets/products.json'\n\nconst categories = ref([])\n\nconst category = ref(\"\")\nconst productName = ref(\"\")\n\nfunction fetchCategories() { \n  const s = new Set()\n  for (const item of products) { \n    s.add(item.categorie)  // Fixed the field name\n  }\n  categories.value = Array.from(s)  // Directly assign the array to the ref\n}\n\nfetchCategories()\n</script>\n"],"mappings":";;;;;;;AASA,SAASA,GAA4B,QAAQ,KAAI;AACjD,OAAOC,QAAQ,MAAM,wBAAuB;;;;;;;IAE5C,MAAMC,UAAU,GAAGF,GAAG,CAAC,EAAE;IAEzB,MAAMG,QAAQ,GAAGH,GAAG,CAAC,EAAE;IACvB,MAAMI,WAAW,GAAGJ,GAAG,CAAC,EAAE;IAE1B,SAASK,eAAeA,CAAA,EAAG;MACzB,MAAMC,CAAC,GAAG,IAAIC,GAAG,CAAC;MAClB,KAAK,MAAMC,IAAI,IAAIP,QAAQ,EAAE;QAC3BK,CAAC,CAACG,GAAG,CAACD,IAAI,CAACE,SAAS,CAAC,EAAE;MACzB;MACAR,UAAU,CAACS,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACP,CAAC,CAAC,EAAE;IACpC;IAEAD,eAAe,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}